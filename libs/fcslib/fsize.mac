;**********************************************************************;
;                                                                      ;
;   This file is part of FCSLIB, a file I/O library for the RSX180 OS. ;
;   Copyright (C) 1985-2020, Hector Peraza.                            ;
;                                                                      ;
;   This library is free software; you can redistribute it and/or      ;
;   modify it under the terms of the GNU Library General Public        ;
;   License as published by the Free Software Foundation; either       ;
;   version 2 of the License, or (at your option) any later version.   ;
;                                                                      ;
;   This library is distributed in the hope that it will be useful,    ;
;   but WITHOUT ANY WARRANTY; without even the implied warranty of     ;
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      ;
;   GNU Library General Public License for more details.               ;
;                                                                      ;
;   You should have received a copy of the GNU Library General Public  ;
;   License along with this program; if not, write to the Free         ;
;   Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. ;
;                                                                      ;
;**********************************************************************;

;  Get file size in bytes into HLDE.
;  Called with IX = address of FIOBL structure.
;  Assumes FRATTR has been called.

	.Z80

	include	SYSFN.INC
	include	FCB.INC
	include	FCSLIB.INC

	public	FSIZE

	extrn	?DEC24

	cseg

; TODO: return error if file not open or channel not assigned to file

FSIZE:	ld	e,(ix+FC.FDB)	; get FDB address into DE
	ld	d,(ix+FC.FDB+1)
	ld	hl,F.NUSED
	add	hl,de
	ld	c,(hl)		; get size in blocks into BHL
	inc	hl
	ld	a,(hl)
	inc	hl
	ld	b,(hl)
	ld	l,c
	ld	h,a
	or	l
	or	b
	jr	nz,fs1
	ld	de,0		; size is 0 if F.NUSED is 0
	ret
fs1:	call	?DEC24		; since last block may not be full
	push	hl
	ld	hl,F.LBCNT
	add	hl,de
	ld	a,(hl)
	inc	hl
	ld	h,(hl)
	ld	l,a
	ex	(sp),hl		; push F.LBCNT, restore F.NUSED
	ld	d,l
	ld	l,h
	ld	h,b
	xor	a
	ld	e,a		; HLDE = (F.NUSED - 1) * 256
	sla	d
	rl	l
	rl	h		; HLDE = (F.NUSED - 1) * 512
	pop	bc		; pop F.LBCNT
	ex	de,hl
	add	hl,bc
	ex	de,hl
	ret	nc
	inc	hl		; HLDE += F.LBCNT
	ret			; return success (A was cleared above)

	end
