;**********************************************************************;
;                                                                      ;
;   This file is part of SYSLIB, a system library for the RSX180 OS.   ;
;   Copyright (C) 1985-2020, Hector Peraza.                            ;
;                                                                      ;
;   This library is free software; you can redistribute it and/or      ;
;   modify it under the terms of the GNU Library General Public        ;
;   License as published by the Free Software Foundation; either       ;
;   version 2 of the License, or (at your option) any later version.   ;
;                                                                      ;
;   This library is distributed in the hope that it will be useful,    ;
;   but WITHOUT ANY WARRANTY; without even the implied warranty of     ;
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      ;
;   GNU Library General Public License for more details.               ;
;                                                                      ;
;   You should have received a copy of the GNU Library General Public  ;
;   License along with this program; if not, write to the Free         ;
;   Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. ;
;                                                                      ;
;***********************************************************************

	.Z80

	public	CRC16

; Compute a cyclic-redundancy-check value based on the CCITT
; standard polynominal:
;
;   x^16 + x^15 + x^13 + x^7 + x^4 + x^2 + x + 1
;
; Based on the 8080 routine by Fred Gutman, from EDN Magazine, June 5,
; 1979 issue, p84.

; Called with remainder in HL, char in C.
; Returns remainder in HL.

; Note: this is the "CP/M" version, which contains a bug!

	cseg

CRC16:	add	hl,hl		; 2 * remainder
	push	af		; save carry bit
	ld	a,c		; message bit in LSB
	add	a,l
	ld	l,a
	pop	af
	ret	nc		; if carry is zero
	ld	a,h
	xor	0A0h		; MS half of gen. poly
	ld	h,a
	ld	a,l
	xor	97h		; LS half of gen. poly
	ld	l,a
	ret

	end
