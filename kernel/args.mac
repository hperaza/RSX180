;**********************************************************************;
;                                                                      ;
;   This file is part of RSX180, a multi-tasking OS for the Z180.      ;
;   Copyright (C) 1985-2020, Hector Peraza.                            ;
;                                                                      ;
;   This program is free software; you can redistribute it and/or      ;
;   modify it under the terms of the GNU General Public License as     ;
;   published by the Free Software Foundation; either version 2 of     ;
;   the License, or (at your option) any later version.                ;
;                                                                      ;
;   This program is distributed in the hope that it will be useful,    ;
;   but WITHOUT ANY WARRANTY; without even the implied warranty of     ;
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      ;
;   GNU General Public License for more details.                       ;
;                                                                      ;
;   You should have received a copy of the GNU General Public License  ;
;   along with this program; if not, write to the Free Software        ;
;   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.          ;
;                                                                      ;
;**********************************************************************;

	NAME	('ARGS')
	TITLE	'RSX180 System Function Call Arguments'

;----------------------------------------------------------------------;
;                                                                      ;
;	System Function Call get-argument and put-result routines.     ;
;                                                                      ;
;----------------------------------------------------------------------;

	.Z80

	include	TCB.INC
	include	PCB.INC

	public	GTARGS		; get arguments from user's task registers
	public	SVRSLT		; store result in user's task registers

	extrn	$CTCB,$CPCB,$UGETB,$UGETW,$UPUTW

	cseg

;-----------------------------------------------------------------------

; Get arguments from task space. Arguments are mainly passed via
; registers; here we fetch the values from the saved stack frame.

GTARGS:	ld	ix,($CTCB)
	ld	hl,($CPCB)
	ld	bc,P.BASE
	add	hl,bc
	ld	e,(hl)		; task bank in E
	ld	c,(ix+T.SP)
	ld	b,(ix+T.SP+1)	; get task's SP into BC
	ld	hl,20
	add	hl,bc		; point to PC in task's stack frame
	push	bc		; save SP value
	push	hl		; save PC offset
	di
	call	$UGETW		; fetch PC value
	ld	l,c		;  into HL
	ld	h,b
	call	$UGETB		; get function code
	pop	bc
	push	af		; save it
	push	bc
	inc	hl		; ++PC
	ld	c,l
	ld	b,h
	pop	hl		; pop PC offset
	call	$UPUTW		; save modified PC back
	pop	af
	pop	bc		; pop SP value
	push	af
	ld	hl,12
	add	hl,bc		; point to HL in task's stack frame
	call	$UGETW		; fetch HL
	push	bc
	call	$UGETW		; fetch DE
	push	bc
	call	$UGETW		; fetch BC
	ei
	pop	de
	pop	hl
	pop	af
	ret

; Save result into task register space.

SVRSLT:	push	af
	ld	ix,($CTCB)
	ld	hl,($CPCB)
	ld	bc,P.BASE
	add	hl,bc
	ld	e,(hl)		; task bank in E
	ld	c,(ix+T.SP)
	ld	b,(ix+T.SP+1)	; get task's SP value into BC
	ld	hl,18
	add	hl,bc		; point to AF in task's stack frame
	pop	bc
	di
	call	$UPUTW		; save AF
	ei
	ret

	end
